{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","map","user","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflow","border","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"kOAaeA,EAXF,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,MAAOC,EAAQ,EAARA,GACxB,OACI,sBAAKC,UAAW,sDAAhB,UACI,qBAAKC,IAAI,SAASC,IAAG,+BAA0BH,EAA1B,cACrB,gCACG,6BAAKF,IACL,4BAAIC,WCeJK,EApBE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OAEf,OACI,8BAEQA,EAAOC,KAAI,SAACC,EAAMC,GACd,OACA,cAAC,EAAD,CAEIR,GAAIK,EAAOG,GAAGR,GACdF,KAAMO,EAAOG,GAAGV,KAChBC,MAAOM,EAAOG,GAAGT,OAHZS,SCMdC,EAfG,SAAC,GAAgC,EAA/BC,YAAgC,IAAnBC,EAAkB,EAAlBA,aAC7B,OACI,qBAAKV,UAAU,MAAf,SACI,uBACAA,UAAW,mCACXW,KAAK,SACLC,YAAa,gBACbC,SAAUH,OCGPI,EAVA,SAACC,GACZ,OACI,qBAAKC,MAAO,CAACC,SAAS,SAAUC,OAAO,kBAAmBC,OAAQ,SAAlE,SACGJ,EAAMK,YCqBFC,E,kDAvBX,WAAaN,GAAQ,IAAD,8BAChB,cAAMA,IACDO,MAAQ,CACTC,UAAU,GAHE,E,qDAQpB,SAAmBC,EAAOC,GACtBC,KAAKC,SAAS,CAACJ,UAAU,M,oBAI7B,WACI,OAAIG,KAAKJ,MAAMC,SACN,0DAEFG,KAAKX,MAAMK,a,GAlBCQ,aCoDZC,G,wDA5CX,aAAgB,IAAD,8BACX,gBAeJC,eAAgB,SAACC,GACb,EAAKJ,SAAS,CAAClB,YAAasB,EAAMC,OAAOC,SAfzC,EAAKX,MAAQ,CACTlB,OAAQ,GACRK,YAAa,IAJN,E,qDASf,WAAqB,IAAD,OAChByB,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAGA,EAASC,UACzBF,MAAK,SAAAG,GAAK,OAAI,EAAKX,SAAS,CAACvB,OAAQkC,S,oBAQ1C,WAAU,IAAD,EACwBZ,KAAKJ,MAA3BlB,EADF,EACEA,OAAQK,EADV,EACUA,YACT8B,EAAiBnC,EAAOoC,QAAO,SAAAC,GACjC,OAAOA,EAAM5C,KAAK6C,cAAcC,SAASlC,EAAYiC,kBAGrD,OAAQtC,EAAOwC,OAGX,sBAAK5C,UAAW,KAAhB,UACI,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWU,aAAcgB,KAAKI,iBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,UACA,cAAC,EAAD,CAAU1B,OAAQmC,WAP9B,6C,GA5BMX,cCGHiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCdO,IAASC,OAAO,cAAC,EAAD,IAAUC,SAASC,eAAe,SAGlDX,M","file":"static/js/main.3abd793f.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({name, email, id}) => {\r\n    return (\r\n        <div className= 'tc bg-light-green dib dr3 pa3 ma2 grow bw2 shadow-5'>\r\n            <img alt='robots' src={`https://robohash.org/${id}?200x200`}/>\r\n            <div>\r\n               <h2>{name}</h2>\r\n               <p>{email}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({robots}) => {\r\n\r\n    return (\r\n        <div>\r\n          {\r\n                robots.map((user, i) =>{ \r\n                    return (\r\n                    <Card \r\n                        key={i} \r\n                        id={robots[i].id} \r\n                        name={robots[i].name} \r\n                        email={robots[i].email}\r\n                        />\r\n                    );\r\n                    })  \r\n          }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({searchfield, searchChange}) => {\r\n    return (\r\n        <div className='pa2'>\r\n            <input \r\n            className= 'pa3 ba b--green bg-lightest-blue'\r\n            type='search' \r\n            placeholder= 'search robots' \r\n            onChange={searchChange}\r\n            />\r\n\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div style={{overflow:'scroll', border:'5px solid black', height: \"500px\"}}>\r\n          {props.children}\r\n        </div>\r\n    )\r\n\r\n};\r\n\r\n\r\nexport default Scroll;","import React, {Component} from 'react';\r\n\r\nclass ErrorBoundry extends Component {\r\n    constructor (props) {\r\n        super(props);\r\n        this.state = {\r\n            hasError: false\r\n        }\r\n    }\r\n\r\n\r\n    componentDidCatch (error, info) {\r\n        this.setState({hasError: true})\r\n\r\n    }\r\n\r\n    render() {\r\n        if (this.state.hasError) {\r\n          return <h1>Oooops. That is not good</h1>\r\n        }\r\n        return this.props.children\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default ErrorBoundry;","import React, {Component} from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBoundry from '../components/ErrorBoundry';\r\nimport './App.css';\r\n\r\n\r\n\r\nclass App extends Component {\r\n    constructor () {\r\n        super()\r\n        this.state = {\r\n            robots: [],\r\n            searchfield: ''\r\n        }\r\n    }\r\n     \r\n    //this link with request the robot files from another site\r\n    componentDidMount() {\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(response=> response.json())\r\n        .then(users => this.setState({robots: users}));\r\n        \r\n    }\r\n\r\n    onSearchChange =(event) => {\r\n        this.setState({searchfield: event.target.value })\r\n\r\n    }\r\n    render() {\r\n        const {robots, searchfield} =this.state;\r\n        const filteredRobots = robots.filter(robot =>{\r\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase());\r\n        })\r\n        \r\n            return !robots.length? \r\n            <h1>Loading</h1> :\r\n            (\r\n                <div className= 'tc' >   \r\n                    <h1 className='f1'>RoboFriends</h1>\r\n                    <SearchBox searchChange={this.onSearchChange}/>\r\n                    <Scroll>\r\n                        <ErrorBoundry>\r\n                        <CardList robots={filteredRobots} />   \r\n                        </ErrorBoundry>\r\n                    </Scroll>\r\n                    \r\n                </div>\r\n            );\r\n    }       \r\n    \r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\n\nReactDOM.render(<App />,  document.getElementById('root'));\n\n\nreportWebVitals();\n"],"sourceRoot":""}